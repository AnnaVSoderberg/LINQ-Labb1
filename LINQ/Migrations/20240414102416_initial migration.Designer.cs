// <auto-generated />
using System;
using LINQ.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LINQ.Migrations
{
    [DbContext(typeof(LinqDbContext))]
    [Migration("20240414102416_initial migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LINQ.Models.ModelCourse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CourseName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("TblCourses");
                });

            modelBuilder.Entity("LINQ.Models.ModelStudent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.ToTable("TblStudents");
                });

            modelBuilder.Entity("LINQ.Models.ModelSubject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ModelCourseID")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("ModelCourseID");

                    b.ToTable("TblSubjects");
                });

            modelBuilder.Entity("LINQ.Models.ModelTeacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("TeacherName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("TblTeachers");
                });

            modelBuilder.Entity("ModelCourseModelTeacher", b =>
                {
                    b.Property<int>("CoursesID")
                        .HasColumnType("int");

                    b.Property<int>("TeachersID")
                        .HasColumnType("int");

                    b.HasKey("CoursesID", "TeachersID");

                    b.HasIndex("TeachersID");

                    b.ToTable("ModelCourseModelTeacher");
                });

            modelBuilder.Entity("ModelSubjectModelTeacher", b =>
                {
                    b.Property<int>("SubjectsID")
                        .HasColumnType("int");

                    b.Property<int>("TeachersID")
                        .HasColumnType("int");

                    b.HasKey("SubjectsID", "TeachersID");

                    b.HasIndex("TeachersID");

                    b.ToTable("ModelSubjectModelTeacher");
                });

            modelBuilder.Entity("LINQ.Models.ModelStudent", b =>
                {
                    b.HasOne("LINQ.Models.ModelCourse", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("LINQ.Models.ModelSubject", b =>
                {
                    b.HasOne("LINQ.Models.ModelCourse", null)
                        .WithMany("Subjects")
                        .HasForeignKey("ModelCourseID");
                });

            modelBuilder.Entity("ModelCourseModelTeacher", b =>
                {
                    b.HasOne("LINQ.Models.ModelCourse", null)
                        .WithMany()
                        .HasForeignKey("CoursesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LINQ.Models.ModelTeacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModelSubjectModelTeacher", b =>
                {
                    b.HasOne("LINQ.Models.ModelSubject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LINQ.Models.ModelTeacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LINQ.Models.ModelCourse", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
